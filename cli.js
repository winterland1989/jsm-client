// Generated by CoffeeScript 1.9.3
(function() {
  var commander, conf, crypto, fs, jsm, path, readline;

  commander = require('commander');

  jsm = require('./index.js');

  readline = require('readline');

  fs = require('fs');

  crypto = require('crypto');

  path = require('path');

  conf = jsm.readJsmClientConfig();

  commander.command('install [entries...]').alias('i').description('Install snippets for given entry files, omit entries default to search jsm.json.').action(function(entries) {
    var entry, i, len, results;
    results = [];
    for (i = 0, len = entries.length; i < len; i++) {
      entry = entries[i];
      results.push(jsm.install(conf, path.resolve(process.cwd(), entry)));
    }
    return results;
  });

  commander.command('publish [entry]').alias('p').description('Publish snippet, version default to 0 if entry doesn\'t end with version numbers.').action(function(entryPath) {
    var entry, rl;
    if (fs.existsSync(entryPath)) {
      entry = jsm.parseEntry(entryPath);
      rl = readline.createInterface({
        input: process.stdin,
        output: process.stdout
      });
      return rl.question("Username" + (entry.author != null ? "(default: " + entry.author + "):" : ':'), function(author) {
        if (author) {
          entry.author = author;
        }
        return rl.question("Password:", function(password) {
          rl.close();
          if (password !== "") {
            entry.password = password;
            console.log("Pulish " + (entry.title + entry.version) + " to " + entry.author + "/" + (entry.title + entry.version) + "...");
            entry.content = fs.readFileSync(entryPath, {
              encoding: 'utf8'
            });
            return jsm.publish(conf, entry);
          } else {
            return console.log("Empty password...");
          }
        });
      });
    } else {
      return console.log("Entry doesn't exist...");
    }
  });

  commander.command('config').alias('c').description('Config jsm repository and user info.').action(function() {
    var rl;
    rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout
    });
    return rl.question("Repository Address(default: " + conf.repository + "):", function(repository) {
      if (repository) {
        conf.repository = repository;
      }
      jsm.writeJsmClientConfig(conf);
      console.log("Configure succeessful!");
      return rl.close();
    });
  });

  commander.version('0.0.3');

  if (process.argv.slice(2).length) {
    commander.parse(process.argv);
  } else {
    commander.outputHelp();
  }

}).call(this);
